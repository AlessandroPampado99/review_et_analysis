input:
  excel_path: "C:\\Users\\aless\\Desktop\\PhD_Pisa\\2025_01_10\\review_et_analysis\\input\\input_dataset.xlsx"
  sheet: "input_dataset"
  header: 0
  exclude_last_cols: 3
  flatten_columns: true
  flatten_sep: " | "
  flatten_lower: false
  flatten_strip: true
  cache_parquet: false         # true just if you want cache
  cache_path: "C:\\path\\to\\cache\\data.parquet"

pipeline:
  - step: drop_columns
    params:
      names: ["id_to_remove", "notes"]

  - step: coerce_numeric
    params:
      columns: ["CAPEX", "OPEX", "lifetime", "efficiency"]

  - step: filter_rows
    params:
      query: "CAPEX > 0"
      
  - step: assign_colors_by_technology
    params:
      technology_col: "Technology name"
      cmap_name: "tab20"
      seed: 42
      shuffle: false

  - step: stats_by_technology
    params:
      technology_col: "Technology name"
      columns: ["CAPEX", "OPEX", "lifetime", "efficiency"]
      metrics: ["mean", "median", "min", "max", "count", "std"]
      output_dir: "C:\\Users\\aless\\Desktop\\PhD_Pisa\\2025_01_10\\review_et_analysis\\output\\stats"

  # bar plot for CAPEX
  - step: plot_bar_by_technology
    params:
      stats_source_col: "CAPEX"
      value_col: "mean"
      error_col: "std"
      count_col: "count"
      # top_n: 20
      out_dir: "C:\\Users\\aless\\Desktop\\PhD_Pisa\\2025_01_10\\review_et_analysis\\output\\plots\\capex"

  # bar plot per OPEX
  - step: plot_bar_by_technology
    params:
      stats_source_col: "efficiency"
      value_col: "mean"
      error_col: "std"
      count_col: "count"
      top_n: 30
      out_dir: "C:\\Users\\aless\\Desktop\\PhD_Pisa\\2025_01_10\\review_et_analysis\\output\\plots\\efficiency"

# dopo assign_colors_by_technology e stats_by_technology
  - step: plot_gaussian_with_samples_by_technology
    params:
        stats_source_col: "CAPEX"        # column for the Gaussian
        # data_source_col: "CAPEX"       # optional (default = stats_source_col)
        tech_select: ["PEM  Electrolyzer"]             # or list: ["PEM  Electrolyzer", "Battery Storage"]
        use_original_df: true         # true if you want from the original df
        out_dir: "C:\\Users\\aless\\Desktop\\PhD_Pisa\\2025_01_10\\review_et_analysis\\output\\plots\\capex"
        x_sigma_span: 4.0
        show_hist: true                  # histogram in density
        bins: 30
        show_rug: true                   # points on the x-axis
        rug_size: 30
        rug_alpha: 0.7

  # 3) costruisci il grafo: pesi dalla media CAPEX (oppure metti count)
  - step: build_flow_graph
    params:
      input_col: "Input"
      technology_col: "Technology name"
      output_col: "Output"
      token_separators: [";", ",", "|"]
      weight_mode: "stats"             # "stats" | "column" | "uniform"
      weight_stats_source_col: "CAPEX" # da ctx["stats"]["CAPEX"]
      weight_stats_metric: "mean"      # oppure "count" se vuoi il numero di punti
      weight_scale: 0.01          # <= divide per 100
      weight_transform: "none"    # opzionale: "sqrt" o "log10"
      min_weight: 0.0

  # 4A) rete statica (PNG)
  - step: plot_flow_networkx
    params:
      edge_width_min: 0.6
      edge_width_max: 6.0
      # out_dir: "C:\\...\\output\\graphs"

  # 4B) sankey interattivo (HTML + opz. PNG)
  - step: plot_flow_sankey
    params:
      save_png: false
      # out_dir: "C:\\...\\output\\graphs"


output:
  save_csv: true
  csv_path: "C:\\Users\\aless\\Desktop\\PhD_Pisa\\2025_01_10\\review_et_analysis\\output\\final_output.csv"
